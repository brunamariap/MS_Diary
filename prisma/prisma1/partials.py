# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template partials.py.jinja --
from . import types, fields, enums, actions, models, bases
from ._compat import model_rebuild, field_validator


class GradeRequest(bases.BaseGrade):
    score: _int
    bimester: _int
    disciplineId: _str
    attributedBy: _str
    studentId: _str
    diaryId: _str



class GradeResponse(bases.BaseGrade):
    id: _str
    score: _int
    bimester: _int
    disciplineId: _str
    attributedBy: _str
    studentId: _str
    diaryId: _str



class DiaryRequest(bases.BaseDiary):
    referencePeriod: _int
    referenceYear: _int
    startDate: datetime.datetime
    endDate: datetime.datetime



class DiaryResponse(bases.BaseDiary):
    id: _str
    referencePeriod: _int
    referenceYear: _int
    startDate: datetime.datetime
    endDate: datetime.datetime




# users can modify relational types which are then namespaced to partials.
# so we have to import ourselves in order to resolve forward references
from . import partials

model_rebuild(GradeRequest)
model_rebuild(GradeResponse)
model_rebuild(DiaryRequest)
model_rebuild(DiaryResponse)

# fmt: on
